# instance the provider
provider "libvirt" {
  uri = "qemu:///system"
}

resource "libvirt_volume" "rhcos" {
  name   = "rhcos42.qcow2"
  pool   = "${var.storage-pool}"
  source = "${var.coreos-image}"
  format = "qcow2"
}

####Masters
resource "libvirt_volume" "fatdisk-master" {
  name           = "fatdisk-${element(var.namemaster, count.index)}.qcow2"
  base_volume_id = "${libvirt_volume.rhcos.id}"
  pool           = "${var.storage-pool}"
  size           = 25361393152
  count = "${length(var.ipmaster)}"
}
resource "libvirt_volume" "volume-etcd-master" {
  name   = "volume-etcd-${element(var.namemaster, count.index)}.qcow2"
  pool   = "${var.storage-pool}"
  size   = "25000000000"
  format = "qcow2"
  count = "${length(var.namemaster)}"
}
resource "libvirt_volume" "volume-containers-master" {
  name   = "volume-containers-${element(var.namemaster, count.index)}"
  pool   = "${var.storage-pool}"
  size   = "25000000000"
  format = "qcow2"
  count = "${length(var.namemaster)}"
}
resource "libvirt_ignition" "ignition-master" {
  name = "${element(var.namemaster, count.index)}.ign"
  content = data.template_file.user_data_master.rendered
  count = "${length(var.ipmaster)}"
}

resource "libvirt_domain" "master" {
  name   = "${element(var.namemaster, count.index)}"
  memory = "${var.host-master-mem}"
  vcpu   = "${var.host-master-cores}"
  cpu = {
    mode = "host-passthrough"
  }
  coreos_ignition = "${element(libvirt_ignition.ignition-master.*.id, count.index)}"
  network_interface {
    network_name = "ocp4libvirt"
    mac = "AA:BB:CC:11:42:1${count.index}"
  }

  console {
    type        = "pty"
    target_port = "0"
    target_type = "serial"
  }

  console {
    type        = "pty"
    target_type = "virtio"
    target_port = "1"
  }

  disk {
    volume_id = "${element(libvirt_volume.fatdisk-master.*.id, count.index)}"
  }
  graphics {
    type        = "spice"
    listen_type = "address"
    autoport    = true
  }
  count = "${length(var.ipmaster)}"
  #depends_on = [libvirt_domain.bootstrap]

}





##################workers###############


resource "libvirt_volume" "fatdisk-worker" {
  # name           = "fatdisk-${element(var.name, count.index)}"
  name           = "fatdisk-${element(var.nameworker, count.index)}.qcow2"
  base_volume_id = "${libvirt_volume.rhcos.id}"
  pool           = "${var.storage-pool}"
  size           = 25361393152
  count = "${length(var.ipworker)}"
}


resource "libvirt_ignition" "ignition-worker" {
  name = "${element(var.nameworker, count.index)}.ign"
  content = data.template_file.user_data_worker.rendered
  count = "${length(var.ipworker)}"
}

resource "libvirt_domain" "worker" {
  name   = "${element(var.nameworker, count.index)}"
  memory = "${var.host-worker-mem}"
  vcpu   = "${var.host-worker-cores}"
  cpu = {
    mode = "host-passthrough"
  }
  coreos_ignition = "${element(libvirt_ignition.ignition-worker.*.id, count.index)}"
  network_interface {
    network_name = "ocp4libvirt"
    mac = "AA:BB:CC:11:42:2${count.index}"
  }

  console {
    type        = "pty"
    target_port = "0"
    target_type = "serial"
  }

  console {
    type        = "pty"
    target_type = "virtio"
    target_port = "1"
  }

  disk {
    volume_id = "${element(libvirt_volume.fatdisk-worker.*.id, count.index)}"
  }
  # disk {
  #   volume_id = "${element(libvirt_volume.volume2-worker.*.id, count.index)}"
  # }
  graphics {
    type        = "spice"
    listen_type = "address"
    autoport    = true
  }
  count = "${length(var.ipworker)}"
  
}

#
######bootstrap###
resource "libvirt_volume" "bootstrap" {
   name   = "bootstrap.qcow2"
   pool   = "${var.storage-pool}"
   source = "${var.coreos-image}"
   format = "qcow2"
 }

resource "libvirt_ignition" "ignition-bootstrap" {
   name = "bootstrap.ign"
   content = data.template_file.user_data_bootstrap.rendered
 }

resource "libvirt_volume" "bootstrap-boot" {
  name           = "bootstrap-boot.qcow2"
  base_volume_id = "${libvirt_volume.bootstrap.id}"
  pool           = "${var.storage-pool}"
  size           = 25361393152
}

# Create the machine
resource "libvirt_domain" "bootstrap" {
  name   = "bootstrap"
  memory = "8192"
  vcpu   = 2
  cpu = {
       mode = "host-passthrough"
   }
  coreos_ignition = libvirt_ignition.ignition-bootstrap.id


  network_interface {
    network_name = "ocp4libvirt"
    mac = "AA:BB:CC:11:42:40"
  }
  console {
    type        = "pty"
    target_port = "0"
    target_type = "serial"
  }

  console {
    type        = "pty"
    target_type = "virtio"
    target_port = "1"
  }

  disk {
    volume_id = "${libvirt_volume.bootstrap-boot.id}"
  }

  graphics {
    type        = "spice"
    listen_type = "address"
    autoport    = true
  }
}
